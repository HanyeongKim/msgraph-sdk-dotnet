// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Device App Management.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class DeviceAppManagement : Entity
    {
    
        /// <summary>
        /// Gets or sets windows store for business last successful sync date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "windowsStoreForBusinessLastSuccessfulSyncDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? WindowsStoreForBusinessLastSuccessfulSyncDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets is enabled for windows store for business.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "isEnabledForWindowsStoreForBusiness", Required = Newtonsoft.Json.Required.Default)]
        public bool? IsEnabledForWindowsStoreForBusiness { get; set; }
    
        /// <summary>
        /// Gets or sets windows store for business language.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "windowsStoreForBusinessLanguage", Required = Newtonsoft.Json.Required.Default)]
        public string WindowsStoreForBusinessLanguage { get; set; }
    
        /// <summary>
        /// Gets or sets windows store for business last completed application sync time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "windowsStoreForBusinessLastCompletedApplicationSyncTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? WindowsStoreForBusinessLastCompletedApplicationSyncTime { get; set; }
    
        /// <summary>
        /// Gets or sets windows management app.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "windowsManagementApp", Required = Newtonsoft.Json.Required.Default)]
        public WindowsManagementApp WindowsManagementApp { get; set; }
    
        /// <summary>
        /// Gets or sets mobile apps.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "mobileApps", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementMobileAppsCollectionPage MobileApps { get; set; }
    
        /// <summary>
        /// Gets or sets mobile app categories.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "mobileAppCategories", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementMobileAppCategoriesCollectionPage MobileAppCategories { get; set; }
    
        /// <summary>
        /// Gets or sets enterprise code signing certificates.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "enterpriseCodeSigningCertificates", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementEnterpriseCodeSigningCertificatesCollectionPage EnterpriseCodeSigningCertificates { get; set; }
    
        /// <summary>
        /// Gets or sets ios lob app provisioning configurations.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "iosLobAppProvisioningConfigurations", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementIosLobAppProvisioningConfigurationsCollectionPage IosLobAppProvisioningConfigurations { get; set; }
    
        /// <summary>
        /// Gets or sets symantec code signing certificate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "symantecCodeSigningCertificate", Required = Newtonsoft.Json.Required.Default)]
        public SymantecCodeSigningCertificate SymantecCodeSigningCertificate { get; set; }
    
        /// <summary>
        /// Gets or sets mobile app configurations.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "mobileAppConfigurations", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementMobileAppConfigurationsCollectionPage MobileAppConfigurations { get; set; }
    
        /// <summary>
        /// Gets or sets side loading keys.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sideLoadingKeys", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementSideLoadingKeysCollectionPage SideLoadingKeys { get; set; }
    
        /// <summary>
        /// Gets or sets managed app policies.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managedAppPolicies", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementManagedAppPoliciesCollectionPage ManagedAppPolicies { get; set; }
    
        /// <summary>
        /// Gets or sets ios managed app protections.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "iosManagedAppProtections", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementIosManagedAppProtectionsCollectionPage IosManagedAppProtections { get; set; }
    
        /// <summary>
        /// Gets or sets android managed app protections.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "androidManagedAppProtections", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementAndroidManagedAppProtectionsCollectionPage AndroidManagedAppProtections { get; set; }
    
        /// <summary>
        /// Gets or sets default managed app protections.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "defaultManagedAppProtections", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementDefaultManagedAppProtectionsCollectionPage DefaultManagedAppProtections { get; set; }
    
        /// <summary>
        /// Gets or sets targeted managed app configurations.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "targetedManagedAppConfigurations", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementTargetedManagedAppConfigurationsCollectionPage TargetedManagedAppConfigurations { get; set; }
    
        /// <summary>
        /// Gets or sets mdm windows information protection policies.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "mdmWindowsInformationProtectionPolicies", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionPage MdmWindowsInformationProtectionPolicies { get; set; }
    
        /// <summary>
        /// Gets or sets windows information protection policies.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "windowsInformationProtectionPolicies", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementWindowsInformationProtectionPoliciesCollectionPage WindowsInformationProtectionPolicies { get; set; }
    
        /// <summary>
        /// Gets or sets managed app registrations.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managedAppRegistrations", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementManagedAppRegistrationsCollectionPage ManagedAppRegistrations { get; set; }
    
        /// <summary>
        /// Gets or sets managed app statuses.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managedAppStatuses", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementManagedAppStatusesCollectionPage ManagedAppStatuses { get; set; }
    
        /// <summary>
        /// Gets or sets managed ebooks.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managedEBooks", Required = Newtonsoft.Json.Required.Default)]
        public IDeviceAppManagementManagedEBooksCollectionPage ManagedEBooks { get; set; }
    
    }
}

