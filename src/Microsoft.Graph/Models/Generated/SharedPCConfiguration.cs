// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Shared PCConfiguration.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class SharedPCConfiguration : DeviceConfiguration
    {
    
        /// <summary>
        /// Gets or sets account manager policy.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "accountManagerPolicy", Required = Newtonsoft.Json.Required.Default)]
        public SharedPCAccountManagerPolicy AccountManagerPolicy { get; set; }
    
        /// <summary>
        /// Gets or sets allowed accounts.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "allowedAccounts", Required = Newtonsoft.Json.Required.Default)]
        public SharedPCAllowedAccountType? AllowedAccounts { get; set; }
    
        /// <summary>
        /// Gets or sets allow local storage.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "allowLocalStorage", Required = Newtonsoft.Json.Required.Default)]
        public bool? AllowLocalStorage { get; set; }
    
        /// <summary>
        /// Gets or sets disable account manager.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "disableAccountManager", Required = Newtonsoft.Json.Required.Default)]
        public bool? DisableAccountManager { get; set; }
    
        /// <summary>
        /// Gets or sets disable edu policies.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "disableEduPolicies", Required = Newtonsoft.Json.Required.Default)]
        public bool? DisableEduPolicies { get; set; }
    
        /// <summary>
        /// Gets or sets disable power policies.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "disablePowerPolicies", Required = Newtonsoft.Json.Required.Default)]
        public bool? DisablePowerPolicies { get; set; }
    
        /// <summary>
        /// Gets or sets disable sign in on resume.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "disableSignInOnResume", Required = Newtonsoft.Json.Required.Default)]
        public bool? DisableSignInOnResume { get; set; }
    
        /// <summary>
        /// Gets or sets enabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "enabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? Enabled { get; set; }
    
        /// <summary>
        /// Gets or sets idle time before sleep in seconds.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "idleTimeBeforeSleepInSeconds", Required = Newtonsoft.Json.Required.Default)]
        public Int32? IdleTimeBeforeSleepInSeconds { get; set; }
    
        /// <summary>
        /// Gets or sets kiosk app display name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "kioskAppDisplayName", Required = Newtonsoft.Json.Required.Default)]
        public string KioskAppDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets kiosk app user model id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "kioskAppUserModelId", Required = Newtonsoft.Json.Required.Default)]
        public string KioskAppUserModelId { get; set; }
    
        /// <summary>
        /// Gets or sets maintenance start time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "maintenanceStartTime", Required = Newtonsoft.Json.Required.Default)]
        public TimeOfDay MaintenanceStartTime { get; set; }
    
    }
}

